
##########	Translexis FVWM Script
##########	Short text translator
##########	by sebaro
##########
##########	Supported Languages:
##########	Afrikaans, Albanian, Arabic, Armenian, Azerbaijani, Basque, Belarusian, Bulgarian,
##########	Catalan, Chinese, Croatian, Czech, Danish, Dutch, English, Estonian, Filipino, Finnish, French,
##########	Galician, Georgian, German, Greek, Haitian Creole, Hebrew, Hindi, Hungarian,
##########	Icelandic, Indonesian, Irish, Italian, Japanese, Korean, Latin, Latvian, Lithuanian,
##########	Macedonian, Malay, Maltese, Norwegian, Persian, Polish, Portuguese, Romanian, Russian,
##########	Serbian, Slovak, Slovenian, Spanish, Swahili, Swedish, Thai, Turkish, Ukrainian, Urdu,
##########	Vietnamese, Welsh, Yiddish
##########
##########	rev.2012-08-14

WindowTitle {Translexis}
WindowSize 320 100
WindowPosition 8 791

##### Global Style
Colorset 10
Font "xft:DejaVu Sans:size=8:bold"

Init
Begin
  ##### Widgets Style
  Set $defaultColorset = {10}
  Set $warnColorset = {12}

  ##### Settings
  Set $homeDir = (GetOutput {echo $HOME} 1 -1) {/.fvwm/scripts/Translexis/}
  Set $putTmp = {/dev/shm/}
  Set $trFromLangs = {English, French, German, Romanian}
  Set $trToLangs = {English, French, German, Romanian}
  Set $trDefFromLang = {English}
  Set $trDefToLang = {German}

  ##### Variables
  Set $trFromLang = $trDefFromLang
  Set $trToLang = $trDefToLang

  ##### Languages
  Set $parseFromLangs = {echo "} $trFromLangs {" | sed -e "s/^[ ]*//" -e "s/[ ]*$//" -e "s/[ ]*,[ ]*/,/g"}
  Set $fromLangs = (GetOutput $parseFromLangs 1 -1)
  Set $getNrFromLangs = {echo "} $fromLangs {" | grep -o "," | wc -l}
  Set $nrFromLangs = (Add (GetOutput $getNrFromLangs 1 -1) 1)
  Set $eachFromLang = {echo "} $fromLangs {" | sed -e "s/,/\n/g"}
  Set $getTrFromLang = {echo "} $trFromLang {" | sed -e "s/^[ ]*//" -e "s/[ ]*$//"}
  Set $trFromLang = (GetOutput $getTrFromLang 1 -1)
  If $trFromLang == {} Then
    Set $trFromLang = (GetOutput $eachFromLang 1 -1)
  For $i = 1 To $nrFromLangs Do
  Begin
    If (GetOutput $eachFromLang $i -1) == $trFromLang Then
      Set $currFromLang = $i
  End
  Set $parseToLangs = {echo "} $trToLangs {" | sed -e "s/^[ ]*//" -e "s/[ ]*$//" -e "s/[ ]*,[ ]*/,/g"}
  Set $toLangs = (GetOutput $parseToLangs 1 -1)
  Set $getNrToLangs = {echo "} $toLangs {" | grep -o "," | wc -l}
  Set $nrToLangs = (Add (GetOutput $getNrToLangs 1 -1) 1)
  Set $eachToLang = {echo "} $toLangs {" | sed -e "s/,/\n/g"}
  Set $getTrToLang = {echo "} $trToLang {" | sed -e "s/^[ ]*//" -e "s/[ ]*$//"}
  Set $trToLang = (GetOutput $getTrToLang 1 -1)
  If $trToLang == {} Then
    Set $trToLang = (GetOutput $eachToLang 1 -1)
  For $i = 1 To $nrToLangs Do
  Begin
    If (GetOutput $eachToLang $i -1) == $trToLang Then
      Set $currToLang = $i
  End

  ##### Widgets
  Set $translatIcon = $homeDir {icons/translexis.png}
  ChangeIcon 1 $translatIcon
  ChangeTitle 2 {Enter Text To Translate Here}
  HideWidget 3
  ChangeTitle 4 $trFromLang
  Set $toIcon = $homeDir {icons/to.png}
  ChangeIcon 5 $toIcon
  ChangeTitle 6 $trToLang
  Set $quitButton = $homeDir {icons/quit.png}
  ChangeIcon 8 $quitButton
  Key Return A 3 1
  Key Escape A 3 2

  ##### Fetch Data
  Set $fetchFile = $putTmp {translexis_fetch_file}
  Set $fetchFileStatus = $putTmp {translexis_fetch_file_status}
  Do {exec echo "" > "} $fetchFileStatus {"}
  Set $transGet = {http://mymemory.translated.net/api/get?}

  ##### Curly Brackets
  Set $leftCB = (GetOutput {printf "\173"} 1 -1)
  Set $rightCB = (GetOutput {printf "\175"} 1 -1)
End

PeriodicTasks
Begin
  ##### Enter Text
  If $changeText == {true} Then
  Begin
    If $action == {enter} Then
    Begin
      HideWidget 2
      ShowWidget 3
      ChangeTitle 3 (GetTitle 2)
    End
    If $action == {cancel} Then
    Begin
      HideWidget 3
      ShowWidget 2
    End
    Set $changeText = {false}
  End

  ##### Change Languages
  If $changeLang == {true} Then
  Begin
    If $changeFromLang == {true} Then
    Begin
      If $currFromLang == $nrFromLangs Then
        Set $currFromLang = 1
      Else
        Set $currFromLang = (Add $currFromLang 1)
      Set $trFromLang = (GetOutput $eachFromLang $currFromLang -1)
      ChangeTitle 4 $trFromLang
      Do {exec sed -i -e "s/^.*Set \$trDefFromLang.*$/  Set \$trDefFromLang = } $leftCB $trFromLang $rightCB {/" } $homeDir {Translexis}
      Set $changeFromLang = {false}
    End
    If $changeToLang == {true} Then
    Begin
      If $currToLang == $nrToLangs Then
        Set $currToLang = 1
      Else
        Set $currToLang = (Add $currToLang 1)
      Set $trToLang = (GetOutput $eachToLang $currToLang -1)
      ChangeTitle 6 $trToLang
      Do {exec sed -i -e "s/^.*Set \$trDefToLang.*$/  Set \$trDefToLang = } $leftCB $trToLang $rightCB {/" } $homeDir {Translexis}
      Set $changeToLang = {false}
    End
  End

  ##### Get Data
  If $doFetch == {true} Then
  Begin
    Set $getTextToTr = {echo "} (GetTitle 3) {" | sed -e "s/^[ ]*//" -e "s/[ ]*$//" -e "s/\\\//g"}
    Set $textToTr = (GetOutput $getTextToTr 1 -1)
    If $textToTr == {} Then
      Set $invalidText = {true}
    Else
    Begin
      Set $findBadChars = {echo "} $textToTr {" | grep "[^a-zA-Z ;:',.?!-]"}
      Set $findAlphaChars = {echo "} $textToTr {" | grep "[a-zA-Z]"}
      If (GetOutput $findBadChars 1 -1) == {} Then
      Begin
        If (GetOutput $findAlphaChars 1 -1) <> {} Then
          Set $invalidText = {false}
        Else
          Set $invalidText = {true}
      End
      Else
        Set $invalidText = {true}
    End
    If $invalidText == {true} Then
    Begin
      ChangeColorset 7 $warnColorset
      ChangeTitle 7 {Invalid text!}
      ChangeColorset 2 $defaultColorset
    End
    Else
    Begin
      HideWidget 3
      ShowWidget 2
      ChangeTitle 2 $textToTr
      ChangeColorset 7 $defaultColorset
      ChangeTitle 7 {Translating...}

      ## Languages Pair
      Set $getLangPairFrom = {echo "} (StrCopy $trFromLang 1 2) {" | tr A-Z a-z}
      Set $langPairFrom = (GetOutput $getLangPairFrom 1 -1)
      If $trFromLang == {Albanian} Then
        Set $langPairFrom = {sq}
      If $trFromLang == {Armenian} Then
        Set $langPairFrom = {hy}
      If $trFromLang == {Basque} Then
        Set $langPairFrom = {eu}
      If $trFromLang == {Bulgarian} Then
        Set $langPairFrom = {bg}
      If $trFromLang == {Chinese} Then
        Set $langPairFrom = {zh-CN}
      If $trFromLang == {Croatian} Then
        Set $langPairFrom = {hr}
      If $trFromLang == {Czech} Then
        Set $langPairFrom = {cs}
      If $trFromLang == {Dutch} Then
        Set $langPairFrom = {nl}
      If $trFromLang == {Estonian} Then
        Set $langPairFrom = {et}
      If $trFromLang == {Filipino} Then
        Set $langPairFrom = {tl}
      If $trFromLang == {Galician} Then
        Set $langPairFrom = {gl}
      If $trFromLang == {Georgian} Then
        Set $langPairFrom = {ka}
      If $trFromLang == {German} Then
        Set $langPairFrom = {de}
      If $trFromLang == {Greek} Then
        Set $langPairFrom = {el}
      If $trFromLang == {Haitian Creole} Then
        Set $langPairFrom = {ht}
      If $trFromLang == {Hebrew} Then
        Set $langPairFrom = {iw}
      If $trFromLang == {Icelandic} Then
        Set $langPairFrom = {is}
      If $trFromLang == {Indonesian} Then
        Set $langPairFrom = {id}
      If $trFromLang == {Irish} Then
        Set $langPairFrom = {ga}
      If $trFromLang == {Latvian} Then
        Set $langPairFrom = {lv}
      If $trFromLang == {Lithuanian} Then
        Set $langPairFrom = {lt}
      If $trFromLang == {Macedonian} Then
        Set $langPairFrom = {mk}
      If $trFromLang == {Malay} Then
        Set $langPairFrom = {ms}
      If $trFromLang == {Maltese} Then
        Set $langPairFrom = {mt}
      If $trFromLang == {Persian} Then
        Set $langPairFrom = {fa}
      If $trFromLang == {Polish} Then
        Set $langPairFrom = {pl}
      If $trFromLang == {Portuguese} Then
        Set $langPairFrom = {pt}
      If $trFromLang == {Serbian} Then
        Set $langPairFrom = {sr}
      If $trFromLang == {Slovak} Then
        Set $langPairFrom = {sk}
      If $trFromLang == {Spanish} Then
        Set $langPairFrom = {es}
      If $trFromLang == {Swedish} Then
        Set $langPairFrom = {sv}
      If $trFromLang == {Turkish} Then
        Set $langPairFrom = {tr}
      If $trFromLang == {Welsh} Then
        Set $langPairFrom = {cy}
      Set $getLangPairTo = {echo "} (StrCopy $trToLang 1 2) {" | tr A-Z a-z}
      Set $langPairTo = (GetOutput $getLangPairTo 1 -1)
      If $trToLang == {Albanian} Then
        Set $langPairTo = {sq}
      If $trToLang == {Armenian} Then
        Set $langPairTo = {hy}
      If $trToLang == {Basque} Then
        Set $langPairTo = {eu}
      If $trToLang == {Bulgarian} Then
        Set $langPairTo = {bg}
      If $trToLang == {Chinese} Then
        Set $langPairTo = {zh-CN}
      If $trToLang == {Croatian} Then
        Set $langPairTo = {hr}
      If $trToLang == {Czech} Then
        Set $langPairTo = {cs}
      If $trToLang == {Dutch} Then
        Set $langPairTo = {nl}
      If $trToLang == {Estonian} Then
        Set $langPairTo = {et}
      If $trToLang == {Filipino} Then
        Set $langPairTo = {tl}
      If $trToLang == {Galician} Then
        Set $langPairTo = {gl}
      If $trToLang == {Georgian} Then
        Set $langPairTo = {ka}
      If $trToLang == {German} Then
        Set $langPairTo = {de}
      If $trToLang == {Greek} Then
        Set $langPairTo = {el}
      If $trToLang == {Haitian Creole} Then
        Set $langPairTo = {ht}
      If $trToLang == {Hebrew} Then
        Set $langPairTo = {iw}
      If $trToLang == {Icelandic} Then
        Set $langPairTo = {is}
      If $trToLang == {Indonesian} Then
        Set $langPairTo = {id}
      If $trToLang == {Irish} Then
        Set $langPairTo = {ga}
      If $trToLang == {Latvian} Then
        Set $langPairTo = {lv}
      If $trToLang == {Lithuanian} Then
        Set $langPairTo = {lt}
      If $trToLang == {Macedonian} Then
        Set $langPairTo = {mk}
      If $trToLang == {Malay} Then
        Set $langPairTo = {ms}
      If $trToLang == {Maltese} Then
        Set $langPairTo = {mt}
      If $trToLang == {Persian} Then
        Set $langPairTo = {fa}
      If $trToLang == {Polish} Then
        Set $langPairTo = {pl}
      If $trToLang == {Portuguese} Then
        Set $langPairTo = {pt}
      If $trToLang == {Serbian} Then
        Set $langPairTo = {sr}
      If $trToLang == {Slovak} Then
        Set $langPairTo = {sk}
      If $trToLang == {Spanish} Then
        Set $langPairTo = {es}
      If $trToLang == {Swedish} Then
        Set $langPairTo = {sv}
      If $trToLang == {Turkish} Then
        Set $langPairTo = {tr}
      If $trToLang == {Welsh} Then
        Set $langPairTo = {cy}

      ## Get Translation
      Do {exec wget "} $transGet {&q=} $textToTr {&langpair=} $langPairFrom {|} $langPairTo {" -O "} $fetchFile {" && echo "1" > "} $fetchFileStatus {" || echo "0" > "} $fetchFileStatus {"}
      Set $fetchReady = {false}
    End
    Set $doFetch = {false}
  End

  ##### Fetching
  If $fetchReady == {false} Then
  Begin
    Set $getFetchStatus = {cat "} $fetchFileStatus {"}
    If (GetOutput $getFetchStatus 1 -1) == 1 Then
    Begin
      Do {exec echo "" > "} $fetchFileStatus {"}
      Set $fetchReady = {true}
      Set $doRefresh = {true}
      ChangeColorset 7 $defaultColorset
    End
    If (GetOutput $getFetchStatus 1 -1) == 0 Then
    Begin
      Do {exec echo "" > "} $fetchFileStatus {"}
      Set $fetchReady = {true}
      ChangeColorset 7 $warnColorset
      ChangeTitle 7 {Translation Failed!}
    End
  End

  ##### Print Data
  If $doRefresh == {true} Then
  Begin
    Set $getTrText = {cat "} $fetchFile {" | cut -d "\"" -f 6 | sed -e "s/\\\u0026/\&/g"}
    Set $trText = (GetOutput $getTrText 1 -1)
    Set $findEntities = {echo "} $trText {" | grep "&#"}
    If (GetOutput $findEntities 1 -1) <> {} Then
    Begin
      Set $replaceEntities = {perl -CS -e '$txt="} $trText {";@entities=($txt=~/&#(.} $leftCB {2,4} $rightCB {);/g); foreach (@entities) } $leftCB {$char=chr($_);$txt=~s/&#(.} $leftCB {2,4} $rightCB {);/$char/} $rightCB {;print $txt'}
      Set $trText = (GetOutput $replaceEntities 1 -1)
    End
    ChangeTitle 7 $trText
    Set $doRefresh = {false}
  End
End

Widget		1
Property
  Type		ItemDraw
  Size		32 32
  Position		10 5
  Flags		NoFocus NoReliefString
Main
  Case message of
  End

Widget		2
Property
  Type		ItemDraw
  Size		240 20
  Position		50 10
  Flags		NoFocus NoReliefString Left
Main
  Case message of
    SingleClic :
    Begin
      Set $action = {enter}
      Set $changeText = {true}
    End
  End

Widget		3
Property
  Type		TextField
  Size		240 20
  Position		50 10
  Flags		NoReliefString Left
Main
  Case message of
    1 :
    Begin
      Set $doFetch = {true}
    End
    2 :
    Begin
      Set $action = {cancel}
      Set $changeText = {true}
    End
  End

Widget		4
Property
  Type		ItemDraw
  Size		130 22
  Position		10 40
  Flags		NoFocus NoReliefString Right
Main
  Case message of
    SingleClic :
    Begin
      Set $changeFromLang = {true}
      Set $changeLang = {true}
    End
  End

Widget		5
Property
  Type		ItemDraw
  Size		22 22
  Position		147 40
  Flags		NoFocus NoReliefString
Main
  Case message of
    SingleClic :
    Begin
      Set $doFetch = {true}
    End
  End

Widget		6
Property
  Type		ItemDraw
  Size		130 22
  Position		175 40
  Flags		NoFocus NoReliefString Left
Main
  Case message of
    SingleClic :
    Begin
      Set $changeToLang = {true}
      Set $changeLang = {true}
    End
  End

Widget		7
Property
  Type		ItemDraw
  Size		240 20
  Position		50 70
  Flags		NoFocus NoReliefString Left
Main
  Case message of
  End

Widget		8
Property
  Type		ItemDraw
  Size		16 16
  Position		303 1
  Flags		NoFocus NoReliefString
Main
  Case message of
    SingleClic:
    Begin
      Quit
    End
  End

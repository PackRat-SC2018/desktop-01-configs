
##########	Cinema FVWM Script
##########	Movies In US Theaters
##########	by sebaro
##########
##########	rev.2012-08-15

WindowTitle {Cinema}
WindowSize 320 220
WindowPosition 954 344

##### Global Style
Colorset 10
Font "xft:DejaVu Sans:size=8:bold"

Init
Begin
  ##### Widgets Style
  Set $defaultColorset = {10}
  Set $warnColorset = {12}
  Set $crewColorset = {13}
  Set $titleFont = {xft:DejaVu Sans:size=11:bold}
  Set $movieFont = {xft:DejaVu Sans:size=10:bold}

  ##### Settings
  Set $homeDir = (GetOutput {echo $HOME} 1 -1) {/.fvwm/scripts/Cinema/}
  Set $putTmp = {/dev/shm/}

  ##### Widgets
  Set $noIcon = {}
  Set $cineIcon = $homeDir {icons/cinema.png}
  ChangeIcon 1 $cineIcon
  ChangeFont 2 $titleFont
  ChangeFont 3 $movieFont
  ChangeTitle 3 {}
  ChangeColorset 5 $crewColorset
  ChangeTitle 5 {Director:}
  HideWidget 5
  ChangeColorset 7 $crewColorset
  ChangeTitle 7 {Starring:}
  HideWidget 7
  Set $goupButton = $homeDir {icons/up.png}
  ChangeIcon 12 $goupButton
  HideWidget 12
  Set $godownButton = $homeDir {icons/down.png}
  ChangeIcon 13 $godownButton
  HideWidget 13
  Set $goleftButton = $homeDir {icons/left.png}
  ChangeIcon 14 $goleftButton
  HideWidget 14
  Set $gorightButton = $homeDir {icons/right.png}
  ChangeIcon 15 $gorightButton
  HideWidget 15
  Set $quitButton = $homeDir {icons/quit.png}
  ChangeIcon 16 $quitButton

  ##### Data Fetch
  Set $fetchFile = $putTmp {cinema_fetch_file}
  Set $fetchFileTmp = $putTmp {cinema_fetch_file_tmp}
  Set $fetchFileStatus = $putTmp {cinema_fetch_file_status}
  Do {exec echo "" > "} $fetchFileStatus {"}
  Set $fetchPoster = $putTmp {cinema_fetch_poster.jpg}
  Set $fetchPosterStatus = $putTmp {cinema_fetch_poster_status}
  Do {exec echo "" > "} $fetchPosterStatus {"}
  Set $movPoster = $putTmp {cinema_poster.png}
  Set $urlIMDB = {http://www.imdb.com/}
  Set $inTheaters = {movies-in-theaters}
  Set $comingSoon = {movies-coming-soon}

  ##### Variables
  Set $doFetch = {true}
  Set $fetchData = {inTheaters}

  ##### Curly Brackets
  Set $leftCB = (GetOutput {printf "\173"} 1 -1)
  Set $rightCB = (GetOutput {printf "\175"} 1 -1)

  ##### The Parser
  Set $daParser = {grep "^src\|^itemprop='url'" | awk "/^src=/ } $leftCB { if (j>0 && j<7) } $leftCB { for (k=0;k<7-j;k++) } $leftCB { print \"empty\" } $rightCB $rightCB { print;j=0 } $rightCB $leftCB { if (/='url'/) } $leftCB { print;j++ } $rightCB $rightCB {"}
End

PeriodicTasks
Begin
  ##### Get Data
  If $doFetch == {true} Then
  Begin
    ## Clear Widgets
    ChangeTitle 3 {}
    ChangeTitle 6 {}
    ChangeTitle 8 {}
    ChangeTitle 9 {}
    ChangeTitle 10 {}
    ChangeTitle 11 {}
    HideWidget 4
    HideWidget 5
    HideWidget 7
    HideWidget 12
    HideWidget 13
    HideWidget 14
    HideWidget 15

    ## Fetch
    ChangeColorset 2 $defaultColorset
    ChangeTitle 2 {Fetching IMDB ...}
    If $fetchData == {inTheaters} Then
    Begin
      Set $playTitle = {In Theaters}
      Set $getIMDB = $inTheaters
      ShowWidget 15
    End
    If $fetchData == {comingSoon} Then
    Begin
      Set $playTitle = {Coming Soon}
      Set $getIMDB = $comingSoon
      ShowWidget 14
    End
    Do {exec wget "} $urlIMDB $getIMDB {" -O "}$fetchFileTmp {" && (cat "}$fetchFileTmp {" | } $daParser { > "}$fetchFile {" && echo "} $fetchData {" > "} $fetchFileStatus {") || echo "0" > "} $fetchFileStatus {"}

    ## Fetch Wait
    Set $fetchReady = {false}
    Set $doFetch = {false}
  End

  ##### Fetching
  If $fetchReady == {false} Then
  Begin
    Set $getFetch = {cat "} $fetchFileStatus {"}
    If (GetOutput $getFetch 1 -1) == $fetchData Then
    Begin
      Do {exec echo "" > "} $fetchFileStatus {"}
      ChangeColorset 2 $defaultColorset
      Set $fetchReady = {true}
      Set $action = {start}
      Set $doRefresh = {true}
    End
    If (GetOutput $getFetch 1 -1) == 0 Then
    Begin
      Do {exec echo "" > "} $fetchFileStatus {"}
      Set $fetchReady = {true}
      ChangeColorset 2 $warnColorset
      ChangeTitle 2 {Fetching IMDB Failed!}
    End
  End

  ##### Print Data
  If $doRefresh == {true} Then
  Begin
    ## Clear Widgets
    ChangeTitle 3 {}
    ChangeTitle 6 {}
    ChangeTitle 8 {}
    ChangeTitle 9 {}
    ChangeTitle 10 {}
    ChangeTitle 11 {}

    ## First Movie
    If $action == {start} Then
    Begin
      Set $doMovCount = {sed -n "1~8p" "} $fetchFile {" | wc -l}
      Set $movCount = (GetOutput $doMovCount 1 -1)
      Set $currMov = 1
      If $movCount == 0 Then
      Begin
        ChangeColorset 3 $warnColorset
        ChangeTitle 3 {There are no movies!}
      End
      If $movCount > 0 Then
      Begin
        Set $getPosterSrc = {sed -n "1~8p" "} $fetchFile {" | cut -d "\"" -f 2}
        Set $getMovTitle = {sed -n "2~8p" "} $fetchFile {" | cut -d ">" -f 2 | cut -d "<" -f 1 | sed -e "s/\s([0-9]\} $leftCB {4\} $rightCB {)//g"}
        Set $getDirector = {sed -n "3~8p" "} $fetchFile {" | cut -d ">" -f 2 | cut -d "<" -f 1}
        Set $getCineStar1 = {sed -n "4~8p" "} $fetchFile {" | cut -d ">" -f 2 | cut -d "<" -f 1}
        Set $getCineStar2 = {sed -n "5~8p" "} $fetchFile {" | cut -d ">" -f 2 | cut -d "<" -f 1}
        Set $getCineStar3 = {sed -n "6~8p" "} $fetchFile {" | cut -d ">" -f 2 | cut -d "<" -f 1}
        Set $getCineStar4 = {sed -n "7~8p" "} $fetchFile {" | cut -d ">" -f 2 | cut -d "<" -f 1}
        ShowWidget 4
        ShowWidget 5
        ShowWidget 7
      End
      If $movCount > 1 Then
        ShowWidget 13
    End

    ## Next Movie
    If $action == {next} Then
    Begin
     If $currMov == 1 Then
       ShowWidget 12
      Set $currMov = (Add $currMov 1)
      If $currMov == $movCount Then
        HideWidget 13
    End

    ## Previous Movie
    If $action == {prev} Then
    Begin
      If $currMov == $movCount Then
        ShowWidget 13
      Set $currMov = (Add $currMov -1)
      If $currMov == 1 Then
        HideWidget 12
    End

    ## Print Current Movie Data
    If $movCount > 0 Then
    Begin
      ## Play Title
      Set $newTitle = $playTitle { (} $currMov {/} $movCount {)}
      ChangeTitle 2 $newTitle

      ## Movie Title
      Set $movTitle = (GetOutput $getMovTitle $currMov -1)
      If $movTitle == {} Then
        Set $movTitle = {Movie Title N/A}
      ChangeTitle 3 $movTitle

      ## Poster
      ChangeIcon 4 $noIcon
      ChangeColorset 4 $defaultColorset
      ChangeTitle 4 {Loading...}
      Set $posterSrc = (GetOutput $getPosterSrc $currMov -1)
      Do {exec wget "} $posterSrc {" -O "} $fetchPoster {" && (convert -resize 94x140 "} $fetchPoster {" "} $movPoster {" && echo "} $fetchData $currMov {" > "} $fetchPosterStatus {") || echo "0" > "} $fetchPosterStatus {"}
      Set $changePoster = {true}

      ## Director
      Set $Director = (GetOutput $getDirector $currMov -1)
      If $Director == {} Then
        Set $Director = {N/A}
      ChangeTitle 6 $Director

      ## Stars
      Set $cineStar1 = (GetOutput $getCineStar1 $currMov -1)
      Set $cineStar2 = (GetOutput $getCineStar2 $currMov -1)
      Set $cineStar3 = (GetOutput $getCineStar3 $currMov -1)
      Set $cineStar4 = (GetOutput $getCineStar4 $currMov -1)
      If $cineStar1 == {empty} Then
        Set $cineStar1 = {N/A}
      ChangeTitle 8 $cineStar1
      If $cineStar2 <> {empty} Then
        ChangeTitle 9 $cineStar2
      If $cineStar3 <> {empty} Then
        ChangeTitle 10 $cineStar3
      If $cineStar4 <> {empty} Then
        ChangeTitle 11 $cineStar4
    End
    Set $doRefresh = {false}
  End

  ##### Change Poster
  If $changePoster == {true} Then
  Begin
    Set $checkPoster = {cat "} $fetchPosterStatus {"}
    Set $currMovPoster = $fetchData $currMov
    If (GetOutput $checkPoster 1 -1) ==  $currMovPoster Then
    Begin
      Do {exec echo "" > "} $fetchPosterStatus {"}
      ChangeTitle 4 {}
      ChangeIcon 4 $movPoster
      Set $changePoster = {false}
    End
    If (GetOutput $checkPoster 1 -1) ==  0 Then
    Begin
      Do {exec echo "" > "} $fetchPosterStatus {"}
      ChangeColorset 4 $warnColorset
      ChangeTitle 4 {Poster Failed!}
      Set $changePoster = {false}
    End
  End
End

Widget		1
Property
  Type		ItemDraw
  Size		40 40
  Position		15 5
  Flags		NoFocus NoReliefString
Main
  Case message of
  End

Widget		2
Property
  Type		ItemDraw
  Size		200 30
  Position		75 7
  Flags		NoFocus NoReliefString
Main
  Case message of
  End

Widget		3
Property
  Type		ItemDraw
  Size		280 18
  Position		15 47
  Flags		NoFocus NoReliefString Left
Main
  Case message of
  End

Widget		4
Property
  Type		ItemDraw
  Size		94 140
  Position		15 70
  Flags		NoFocus NoReliefString
Main
  Case message of
  End

Widget		5
Property
  Type		ItemDraw
  Size		160 14
  Position		115 80
  Flags		NoFocus NoReliefString Left
Main
  Case message of
  End

Widget		6
Property
  Type		ItemDraw
  Size		160 14
  Position		115 95
  Flags		NoFocus NoReliefString Left
Main
  Case message of
  End

Widget		7
Property
  Type		ItemDraw
  Size		160 14
  Position		115 120
  Flags		NoFocus NoReliefString Left
Main
  Case message of
  End

Widget		8
Property
  Type		ItemDraw
  Size		160 14
  Position		115 135
  Flags		NoFocus NoReliefString Left
Main
  Case message of
  End

Widget		9
Property
  Type		ItemDraw
  Size		160 14
  Position		115 150
  Flags		NoFocus NoReliefString Left
Main
  Case message of
  End

Widget		10
Property
  Type		ItemDraw
  Size		160 14
  Position		115 165
  Flags		NoFocus NoReliefString Left
Main
  Case message of
  End

Widget		11
Property
  Type		ItemDraw
  Size		160 14
  Position		115 180
  Flags		NoFocus NoReliefString Left
Main
  Case message of
  End

Widget		12
Property
  Type		ItemDraw
  Size		16 16
  Position		290 75
  Flags		NoFocus NoReliefString
Main
  Case message of
    SingleClic :
    Begin
      Set $action = {prev}
      Set $doRefresh = {true}
    End
  End

Widget		13
Property
  Type		ItemDraw
  Size		16 16
  Position		290 190
  Flags		NoFocus NoReliefString
Main
  Case message of
    SingleClic :
    Begin
      Set $action = {next}
      Set $doRefresh = {true}
    End
  End

Widget		14
Property
  Type		ItemDraw
  Size		16 16
  Position		55 15
  Flags		NoFocus NoReliefString Left
Main
  Case message of
    SingleClic :
    Begin
      Set $fetchData = {inTheaters}
      Set $doFetch = {true}
    End
  End

Widget		15
Property
  Type		ItemDraw
  Size		16 16
  Position		280 15
  Flags		NoFocus NoReliefString Left
Main
  Case message of
    SingleClic :
    Begin
      Set $fetchData = {comingSoon}
      Set $doFetch = {true}
    End
  End

Widget		16
Property
  Type		ItemDraw
  Size		16 16
  Position		303 1
  Flags		NoFocus NoReliefString
Main
  Case message of
    SingleClic :
      Begin
        Quit
      End
  End
